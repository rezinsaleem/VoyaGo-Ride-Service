syntax = "proto3";
package ride;

service Ride {
  rpc PublishRide(PublishRideRequest) returns (PublishRideResponse);
  rpc GetRide(GetRideRequest) returns (GetRideResponse);
  rpc SearchRides(SearchRideRequest) returns (SearchRideResponse);

  rpc PaymentSuccess(PaymentSuccessRequest) returns (PaymentSuccessResponse);
}

message PaymentSuccessResponse {
  string message = 1;
}

message PaymentSuccessRequest {
  string id = 1;
  double amount = 2;
  string paymentType = 3;
  string paymentId = 4;
  string passengerName = 5;
  string passengerId = 6;
  int64 passengerPhone = 7;
  string passengerImage = 8;
  string passengerEmail = 9;
  string riderId = 10;
  string riderName = 11;
  string riderEmail = 12;
  int64 riderPhone = 13;
}

message PublishRideRequest {
  float start_lat = 1;
  float start_lng = 2;
  string start_address = 3;
  float end_lat = 4;
  float end_lng = 5;
  string end_address = 6;
  string routeName = 7;
  string distance = 8;
  string duration = 9;
  int32 numSeats = 10;
  string rideDate = 11;
  string rideTime = 12;
  float pricePerSeat = 13;
  string car = 14;
  string additionalInfo = 15;
  string status = 16;
  string riderId = 17;
}

message PublishRideResponse {
  string message = 1;
  string rideId = 2;
}

message GetRideRequest {
  string id = 1;
}

message GetRideResponse {
  string start_address = 1;
  string end_address = 2;
  string routeName = 3;
  string distance = 4;
  string duration = 5;
  int32 numSeats = 6;
  string rideDate = 7;
  string rideTime = 8;
  float pricePerSeat = 9;
  string car = 10;
  string additionalInfo = 11;
  string status = 12;
  repeated Passenger passengers = 13;
}

message Passenger {
  int32 id = 1;
  string name = 2;
  int64 phoneNumber = 3;
}

message SearchRideRequest {
  float start_lat = 1;
  float start_lng = 2;
  string start_address = 3;
  float end_lat = 4;
  float end_lng = 5;
  string end_address = 6;
  string date = 7;
}

message GetSearchResponse {
  float start_lat = 1;
  float start_lng = 2;
  string start_address = 3;
  float end_lat = 4;
  float end_lng = 5;
  string end_address = 6;
  string routeName = 7;
  string distance = 8;
  string duration = 9;
  int32 numSeats = 10;
  string rideDate = 11;
  string rideTime = 12;
  float pricePerSeat = 13;
  string car = 14;
  string additionalInfo = 15;
  string status = 16;
  string riderId = 17;
  repeated Passenger passengers = 18;
  float startDistance = 19;
  float endDistance = 20;
  string _id = 21;
}

message SearchRideResponse {
  repeated GetSearchResponse rides = 1;
}